Name

memoryBarrier — controls the ordering of memory transactions issued by a single
shader invocation

Declaration

uint memoryBarrier(  void);

 

Description

memoryBarrier waits on the completion of all memory accesses resulting from the
use of image variables or atomic counters and then returns with no other
effect. When this function returns, the results of any memory stores performed
using coherent variables performed prior to the call will be visible to any
future coherent memory access to the same addresses from other shader
invocations. In particular, the values written this way in one shader stage are
guaranteed to be visible to coherent memory accesses performed by shader
invocations in subsequent stages when those invocations were triggered by the
execution of the original shader invocation (e.g., fragment shader invocations
for a primitive resulting from a particular geometry shader invocation).

{$pipelinestall}{$examples}

Version Support

                            OpenGL Shading Language Version
Function Name 1.10 1.20 1.30 1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50
memoryBarrier -    -    -    -    -    -    ✔    ✔    ✔    ✔    ✔    ✔

See Also

imageLoad, imageStore, imageAtomicAdd, imageAtomicMin, imageAtomicMax,
imageAtomicXor, imageAtomicOr, imageAtomicAnd, imageAtomicExchange,
imageAtomicCompSwap, groupMemoryBarrier, memoryBarrierImage,
memoryBarrierBuffer, memoryBarrierShared

Copyright

Copyright © 2011-2014 Khronos Group. This material may be distributed subject
to the terms and conditions set forth in the Open Publication License, v 1.0, 8
June 1999. http://opencontent.org/openpub/.

