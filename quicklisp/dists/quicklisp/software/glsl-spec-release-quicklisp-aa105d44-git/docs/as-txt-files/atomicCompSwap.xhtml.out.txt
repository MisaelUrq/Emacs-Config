Name

atomicCompSwap — perform an atomic compare-exchange operation to a variable

Declaration

int atomicCompSwap( inout int mem,
                    uint compare,
                    uint data);

 

uint atomicCompSwap( inout uint mem,
                     uint compare,
                     uint data);

 

Parameters

mem

    The variable to use as the target of the operation.

data

    The data to be compared and potentially exchanged with mem.

Description

atomicCompSwap performs an atomic comparison of compare with the contents of
mem. If the content of mem is equal to compare, then the content of data is
written into mem, otherwise the content of mem is unmodifed. The function
returns the original content of mem regardless of the outcome of the
comparison. The contents of the memory being updated by the atomic operation
are guaranteed not to be modified by any other assignment or atomic memory
function in any shader invocation between the time the original value is read
and the time the new value is written.

Atomic memory functions are supported only for a limited set of variables. A
shader will fail to compile if the value passed to the mem argument of an
atomic memory function does not correspond to a buffer or shared variable. It
is acceptable to pass an element of an array or a single component of a vector
to the mem argument of an atomic memory function, as long as the underlying
array or vector is a buffer or shared variable.

{$pipelinestall}{$examples}

Version Support

                             OpenGL Shading Language Version
Function Name  1.10 1.20 1.30 1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50
atomicCompSwap -    -    -    -    -    -    -    -    -    ✔    ✔    ✔

See Also

atomicAdd, atomicAnd, atomicOr, atomicXor, atomicMin, atomicMax, atomicExchange

Copyright

Copyright © 2011-2014 Khronos Group. This material may be distributed subject
to the terms and conditions set forth in the Open Publication License, v 1.0, 8
June 1999. http://opencontent.org/openpub/.

