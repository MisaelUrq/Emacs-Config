Name

gl_HelperInvocation — indicates whether a fragment shader invocation is a
helper invocation

Declaration

in bool gl_HelperInvocation ;

Description

The value gl_HelperInvocation is true if the fragment shader invocation is
considered a helper invocation and is false otherwise. A helper invocation is a
fragment-shader invocation that is created solely for the purposes of
evaluating derivatives for use in non-helper fragment-shader invocations. Such
derivatives are computed implicitly in the built-in function texture(), and
explicitly in the derivative functions dFdx() and dFdy.

Fragment shader helper invocations execute the same shader code as non-helper
invocations, but will not have side effects that modify the framebuffer or
other shader-accessible memory. In particular:

  • Fragments corresponding to helper invocations are discarded when shader
    execution is complete, without updating the framebuffer.

  • Stores to image and buffer variables performed by helper invocations have
    no effect on the underlying image or buffer memory.

  • Atomic operations to image, buffer, or atomic counter variables performed
    by helper invocations have no effect on the underlying image or buffer
    memory. The values returned by such atomic operations are undefined.

Helper invocations may be generated for pixels not covered by a primitive being
rendered. While fragment shader inputs qualified with centroid are normally
required to be sampled in the intersection of the pixel and the primitive, the
requirement is ignored for such pixels since there is no intersection between
the pixel and primitive.

Helper invocations may also be generated for fragments that are covered by a
primitive being rendered when the fragment is killed by early fragment tests
(using the early_fragment_tests qualifier) or where the implementation is able
to determine that executing the fragment shader would have no effect other than
assisting in computing derivatives for other fragment shader invocations.

The set of helper invocations generated when processing any set of primitives
is implementation dependent.

{$pipelinestall}{$examples}

Version Support

                                  OpenGL Shading Language Version
   Variable Name    1.10 1.20 1.30 1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50
gl_HelperInvocation -    -    -    -    -    -    -    -    -    -    -    ✔

See Also

dFdx, texture

Copyright

Copyright © 2014 Khronos Group. This material may be distributed subject to the
terms and conditions set forth in the Open Publication License, v 1.0, 8 June
1999. http://opencontent.org/openpub/.

