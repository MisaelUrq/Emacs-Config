(defun insert-common-data (file-name)
  (insert "/* ========================================================================\n")
  (insert "   $File: $\n")
  (insert "   $Date: ")
  (insert " $\n")
  (insert "   $Revision: $\n")
  (insert (format "   $Creator: %s $\n" user-name))
  (insert "   $Notice: $\n")
  (insert "   ======================================================================== */\n")
  (insert "\n"))

(defun cpp-header-format ()
  "Format the given file as a header file."
  (interactive)
  (setq name (file-name-sans-extension (file-name-nondirectory buffer-file-name)))
  (insert-common-data name)
  (insert "#if !defined(")
  (push-mark)
  (insert name)
  (upcase-region (mark) (point))
  (pop-mark)
  (insert "_H)\n")
  (insert "#define ")
  (push-mark)
  (insert name)
  (upcase-region (mark) (point))
  (pop-mark)
  (insert "_H\n\n\n")
  (insert "#endif"))

(defun cpp-source-format ()
  "Format the given file as a source file."
  (interactive)
  (setq name (file-name-sans-extension (file-name-nondirectory buffer-file-name)))
  (insert-common-data name))

(defun c-insert-case (case)
  "Inserts a case with brakets so that you it can hace it's own scope to work with variables."
  (interactive "sCase: ")
  (setq inital-point (point))
  (insert (format "case %s:\n{\n\n} break;" case))
  (setq final-point (point))
  (indent-region inital-point final-point)
  (backward-paragraph)
  (indent-for-tab-command))

(add-hook 'c++-mode-hook
          (lambda ()
            (define-key c++-mode-map (kbd "C-c c") 'c-insert-case)
            (define-key c++-mode-map (kbd "C-c n") 'c-down-conditional-with-else)
            (define-key c++-mode-map (kbd "C-c a") 'c-beginning-of-defun)
            (define-key c++-mode-map (kbd "C-c e") 'c-end-of-defun)))

(add-hook 'c-mode-hook
          (lambda ()
            (define-key c-mode-map (kbd "C-c c") 'c-insert-case)
            (define-key c-mode-map (kbd "C-c n") 'c-down-conditional-with-else)
            (define-key c-mode-map (kbd "C-c a") 'c-beginning-of-defun)
            (define-key c-mode-map (kbd "C-c e") 'c-end-of-defun)))
